// Not UP TO DATE
//
//
//
//
//
//

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models

model User {
  // Necessary for Next auth
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  usn         String   @unique
  role        Role     @default(USER)
  phoneNumber String?
  joinedAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relational Fields
}

model Account {
  // Necessary for Next auth
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  // Necessary for Next auth
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
}

model VerificationToken {
  // Necessary for Next auth
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Enum Types
enum Role {
  ADMIN
  PRESIDENT
  ORGANIZER
  USER
}

enum EventType {
  INDIVIDUAL
  TEAM
}

enum EventState {
  DRAFT
  SUBMITTED
  PUBLISHED
  LIVE
  COMPLETED
  CANCELLED
}
